version: "3"

services:
  web:
    build:
      context: .
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      meilisearch: 
        condition: service_started
    networks:
      - calcnet
    environment:
      NODE_ENV: production
    volumes:
      - /mnt/puffer/Sharkey/files:/sharkey/files
      - .config:/sharkey/.config:ro

  redis:
    restart: unless-stopped
    image: docker.io/redis:7.0-alpine
    networks:
      - calcnet
    volumes:
      - /srv/Sharkey/redis:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  db:
    restart: unless-stopped
    image: docker.io/postgres:15-alpine
    networks:
      - calcnet
    environment:
      POSTGRES_PASSWORD: misskey
      POSTGRES_USER: misskey
      POSTGRES_DB: misskey
    volumes:
      - /srv/Sharkey/db:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

  meilisearch:
    restart: always
    image: getmeili/meilisearch:v1.3.4
    environment:
      - MEILI_NO_ANALYTICS=true
      - MEILI_ENV=production
      - MEILI_MASTER_KEY=misskeymeilisearch
    networks:
      - calcnet
    volumes:
      - /srv/Sharkey/meili_data:/meili_data

networks:
  calcnet: {}

